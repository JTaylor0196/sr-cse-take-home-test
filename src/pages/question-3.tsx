import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import pageStyles from '@/styles/Page.module.css'
import Link from 'next/link'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  return (
    <>
      <Head>
        <title>Question 3</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={pageStyles.description}>
          <h1>How would you compare Next.js with another framework? Feel free to compare with a framework of your choice.</h1>
          <p>Jekyll is another framework that I have experience with, and I believe both Next.js and Jekyll are useful in their own ways.<br/><br/>Jekyll is geared towards static. Your basic HTML, CSS, Markdown, and Liquid are used to create static sites. That's it. There's no database utilization, so there's no need to provide management for that. But even in its simplicity, Jekyll allows custom page layouts and use of componenets to give your website the option for customization. It's a powerful tool if someone is seeking simplicity.<br/><br/>In comparison, Next.js, as I think of it, is simply more robust. The framework still offers the option of static, such as Jekyll, but it goes a step further, such as the abilities offered with ISR. Next.js is also built on React, so it, by default, offers more functionality and dynamic abilities than Jekyll out of the gate. Using Next.js allows developers to work quick and fast to build Javascript based applications (and deploy them just as quickly using Vercel!)</p>
        </div>

        <div className={pageStyles.center}>
          <Link href="/question-2">&#x2190; Previous Question</Link> | <Link href="/question-4">Next Question &#x2192;</Link>
        </div>
      </main>
    </>
  )
}
